{
    "atomType": "Molecule",
    "name": "test_nov_8",
    "x": 0,
    "y": 0,
    "uniqueID": 1731102035249,
    "ioValues": [],
    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.98,
            "y": 0.5,
            "uniqueID": 1731355302733,
            "ioValues": [],
            "description": "Connect geometry here to make it available in the next level up. "
        },
        {
            "atomType": "Circle",
            "name": "Circle",
            "x": 0.2315930388219545,
            "y": 0.47521865889212833,
            "uniqueID": 1731355337415,
            "ioValues": [
                {
                    "name": "diameter",
                    "ioValue": 10
                }
            ],
            "description": "Creates a new circle."
        },
        {
            "atomType": "Circle",
            "name": "Circle",
            "x": 0.2838018741633199,
            "y": 0.7084548104956269,
            "uniqueID": 1731355475615,
            "ioValues": [
                {
                    "name": "diameter",
                    "ioValue": 7
                }
            ],
            "description": "Creates a new circle."
        },
        {
            "atomType": "Difference",
            "name": "Difference",
            "x": 0.4365671641791045,
            "y": 0.36443148688046645,
            "uniqueID": 1731355486619,
            "ioValues": [
                {
                    "name": "geometry2",
                    "ioValue": 1731355475615
                },
                {
                    "name": "geometry1",
                    "ioValue": 1731355337415
                }
            ],
            "description": "Subtracts shape two from shape one."
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.6632462686567164,
            "y": 0.4518950437317784,
            "uniqueID": 1731358260429,
            "ioValues": [
                {
                    "name": "input1",
                    "ioValue": 1731358701680
                },
                {
                    "name": "height",
                    "ioValue": 10
                }
            ],
            "description": "Defines a Replicad code block.",
            "codeVersion": 1,
            "code": "//Inputs:[input1, height];\n\nlet shape = library[input1].geometry[0]\n\nconst newPlane = new Plane().pivot(0, 'Y');\n\nconsole.log(shape.sketchOnPlane(newPlane))\n\n return { geometry: [shape.sketchOnPlane(newPlane).extrude(5)], tags: [],\n      color: '#A3CE5B',\n      plane: newPlane,\n      bom:[]}\n\n\n    /**\n    To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n    If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n    Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n    https://replicad.xyz/docs/introapp/UserGuide.html \n    Return a replicad object that includes geometry, color, tags and plane. \n\n\n    Example Code Atom:\n\n      Inputs:[shape, x];\n\n      let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n\n      return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n\n      - See more examples at _______ \n\n\n    */\n"
        },
        {
            "atomType": "Join",
            "name": "Fusion",
            "x": 0.49906716417910446,
            "y": 0.6501457725947521,
            "uniqueID": 1731358701680,
            "ioValues": [
                {
                    "name": "Shape 1",
                    "ioValue": 1731358704353
                },
                {
                    "name": "Shape 2",
                    "ioValue": 1731355486619
                }
            ],
            "description": "Pick between assembly and fusion to join input geometries. Assembly takes multiple shapes together into one, shapes higher in the inputs list will cut into shapes lower on the input list where they overlap. Fusion takes all shapes or sketches and fuses them permanently into a single shape",
            "unionType": "Fusion"
        },
        {
            "atomType": "Rectangle",
            "name": "Rectangle",
            "x": 0.38712686567164184,
            "y": 0.80466472303207,
            "uniqueID": 1731358704353,
            "ioValues": [
                {
                    "name": "x length",
                    "ioValue": 2
                },
                {
                    "name": "y length",
                    "ioValue": 2
                }
            ],
            "description": "Creates a new rectangle."
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry1",
            "ap2Primary": false,
            "ap1ID": 1731355337415,
            "ap2ID": 1731355486619
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry2",
            "ap2Primary": false,
            "ap1ID": 1731355475615,
            "ap2ID": 1731355486619
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "Shape 2",
            "ap2Primary": false,
            "ap1ID": 1731355486619,
            "ap2ID": 1731358701680
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "input1",
            "ap2Primary": false,
            "ap1ID": 1731358701680,
            "ap2ID": 1731358260429
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "Shape 1",
            "ap2Primary": false,
            "ap1ID": 1731358704353,
            "ap2ID": 1731358701680
        }
    ],
    "unitsKey": "Inches",
    "fileTypeVersion": 1,
    "compiledBom": {},
    "filetypeVersion": 1
}